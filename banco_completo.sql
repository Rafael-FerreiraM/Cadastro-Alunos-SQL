/* 1 ) Um Banco de Dados chamado TRABALHO (0,1 ponto).*/
DROP DATABASE IF EXISTS TRABALHO;
CREATE DATABASE IF NOT EXISTS TRABALHO;

USE TRABALHO;

/* 
2 ) Com base no diagrama da figura 1, faça o script em Linguagem SQL para os SGBDs
MySQL/MariaDB que crie todas as tabelas no banco de dados TRABALHO (0,9 ponto).
		◦ As chaves primárias e chaves estrangeiras devem estar inseridas no final dos
comandos
		◦ Todas as constraints devem ser nomeadas, como feito em sala de aula
        */

DROP TABLE IF EXISTS ALUNO;
CREATE TABLE IF NOT EXISTS ALUNO(

	RA 					INT						    AUTO_INCREMENT,
    NOME_ALUNO			VARCHAR(250) 				NOT NULL,
    SEXO_ALUNO 			VARCHAR(1) 					NOT NULL 		COMMENT "F - FEMININO / M - MASCULINO" CHECK (SEXO_ALUNO IN ('F','M')),
	CONSTRAINT PK_ALUNO PRIMARY KEY (RA)
) ENGINE=INNODB;


DROP TABLE IF EXISTS TURMA;
CREATE TABLE IF NOT EXISTS TURMA(
	NUM_TURMA 			INT 		NOT NULL,
    DTA_INICIO_AULAS 	DATE 		NOT NULL,
    DTA_FIM_AULAS 		DATE		NOT NULL,
    CONSTRAINT PK_TURMA PRIMARY KEY (NUM_TURMA)
      
) ENGINE=INNODB;

DROP TABLE IF EXISTS PROFESSOR;
CREATE TABLE IF NOT EXISTS PROFESSOR(

	MATRICULA		INT 			AUTO_INCREMENT,
    NOME_PROFESSOR	VARCHAR(250) 	NOT NULL,
    TITULACAO		VARCHAR(100) 	NOT NULL,
    SEXO_PROFESSOR	VARCHAR(1)		NOT NULL 	COMMENT "F - FEMININO / M - MASCULINO" CHECK (SEXO_PROFESSOR IN ('F','M')),
    CONSTRAINT PK_PROFESSOR PRIMARY KEY (MATRICULA)
)ENGINE=INNODB;

DROP TABLE IF EXISTS DISCIPLINA;
CREATE TABLE IF NOT EXISTS DISCIPLINA(

	COD_DISCIPLINA	INT				AUTO_INCREMENT,
    NOM_DISCIPLINA 	VARCHAR(250) 	NOT NULL,
    CARGA_HORARIA	INT 			NOT NULL,
    CONSTRAINT PK_DISCIPLINA PRIMARY KEY (COD_DISCIPLINA)
)ENGINE=INNODB;

DROP TABLE IF EXISTS MATRICULA;
CREATE TABLE IF NOT EXISTS MATRICULA(

	NUM_MATRICULA 					INT,
    DTA_MATRICULA 					DATE 			 NOT NULL,
    DTA_CANCELAMENTO_MATRICULA 		DATE,
    RA 								INT 			 NOT NULL,
    NUM_TURMA 						INT				 NOT NULL,
    PRIMARY KEY(NUM_MATRICULA),
    CONSTRAINT FK_MATRICULA_ALUNO FOREIGN KEY (RA) REFERENCES ALUNO (RA),
    CONSTRAINT FK_MATRICULA_TURMA FOREIGN KEY (NUM_TURMA) REFERENCES TURMA (NUM_TURMA)
    
) ENGINE=INNODB;


DROP TABLE IF EXISTS DISCIPLINA_OFERECIDA;
CREATE TABLE IF NOT EXISTS DISCIPLINA_OFERECIDA(

	NUM_DISCIPLINA_OFERECIDA	INT				AUTO_INCREMENT,
    SALA 						VARCHAR(10) 	NOT NULL,
    BLOCO						VARCHAR(10)     NOT NULL,
    DIA_SEMANA					INT 			NOT NULL	COMMENT "1-DOMINGO / 7-SABADO" CHECK (DIA_SEMANA IN ('1','2','3','4','5','6','7')),
    HOR_INICIO					TIME 			NOT NULL,
    HOR_FIM						TIME 			NOT NULL,
    MATRICULA		            INT             NOT NULL,
    NUM_TURMA					INT				NOT NULL,
    COD_DISCIPLINA              INT 			NOT NULL,
    PRIMARY KEY (NUM_DISCIPLINA_OFERECIDA),
    CONSTRAINT FK_DISCIPLINA_OFERECIDA_TURMA FOREIGN KEY (NUM_TURMA) REFERENCES TURMA(NUM_TURMA),
    -- CONSTRAINT FK_DISCIPLINA_OFERECIDA_AVALIACAO FOREIGN KEY (NUM_DISCIPLINA_OFERECIDA) REFERENCES AVALIACAO (NUM_DISCIPLINA_OFERECIDA),
    CONSTRAINT FK_DISCIPLINA_OFERECIDA_PROFESSOR FOREIGN KEY (MATRICULA) REFERENCES PROFESSOR(MATRICULA),
    CONSTRAINT FK_DISCIPLINA_OFERECIDA_DISCIPLINA FOREIGN KEY (COD_DISCIPLINA) REFERENCES DISCIPLINA(COD_DISCIPLINA)
)ENGINE=INNODB;

DROP TABLE IF EXISTS AVALIACAO;
CREATE TABLE IF NOT EXISTS AVALIACAO(

	SEQ_AVALIACAO_ALUNO		   	INT,
    NOTA_A2 				   	DECIMAL(5,2)  NOT NULL,	-- COMMENT "0 - 5" CHECK (NOTA_A2 IN ('0','1','2','3','4','5')),
    NOTA_A1 				   	DECIMAL(5,2)  NOT NULL,	-- COMMENT "0 - 5" CHECK (NOTA_A1 IN ('0','1','2','3','4','5')),
    NOTA_AF 				   	DECIMAL(5,2)  NOT NULL,
    RA						   	INT 	      NOT NULL,
    NUM_DISCIPLINA_OFERECIDA   	INT           NOT NULL,
    CONSTRAINT PK_AVALIACAO    PRIMARY KEY (SEQ_AVALIACAO_ALUNO),
    CONSTRAINT FK_AVALIACAO_ALUNO    FOREIGN KEY (RA) REFERENCES ALUNO (RA)
    
)ENGINE=INNODB;


/*  
3 ) Crie um script em Linguagem SQL para o SGBD MySQL/MariaDB que insira:
	3.1 ) Cadastros (0,4 ponto)
		3.1.1 ) 2 Turmas:
			◦ Turma A: Aulas entre 01/08/2022 e 20/12/2022
			◦ Turma B: Aulas entre 13/02/2023 e 30/06/2023
		3.1.2 ) 10 Alunos em cada turma
		3.1.3 ) 4 Professores
		3.1.4 ) 4 Disciplinas
	3.2 ) Vínculos:
		3.2.1 ) Matricule 10 alunos na Turma A e outros 10 alunos na Turma B (0,1 ponto)
		3.2.2 ) Ofereça as 4 disciplinas em cada uma das turmas (A e B) (0,1 ponto)
		3.2.3 ) Insira as notas das avaliações dos alunos da turma A, conforme abaixo (0,2
		ponto):
			◦ 10% dos alunos devem ser reprovados direto.
		◦ 40% dos alunos devem ser aprovados direto.
		◦ 50% dos alunos devem fazer AF. Destes, 40% devem ser reprovados.
		3.2.4 ) Insira as notas das avaliações dos alunos da turma B, conforme abaixo (0,2
	ponto):
			◦ 10% dos alunos devem ser reprovados direto.
			◦ 40% dos alunos devem ser aprovados direto.
			◦ 50% dos alunos devem fazer AF. Considere que esta turma ainda irá fazer a
			AF.
*/

-- TURMA A
INSERT INTO TURMA 
	(NUM_TURMA, DTA_INICIO_AULAS, DTA_FIM_AULAS) 
	VALUES 

	(1, '2022-08-01', '2022-12-20');

-- TURMA B
INSERT INTO TURMA 
	(NUM_TURMA, DTA_INICIO_AULAS, DTA_FIM_AULAS) 
    VALUES  
    
    (2, '2023-02-13', '2023-06-30');

-- INSERINDO 10 ALUNOS NA TURMA A
INSERT INTO ALUNO 
	(RA, NOME_ALUNO, SEXO_ALUNO) 
	VALUES
    
	(	900, 'JOÃO PEDRO', 			'M'),
	(	901, 'MARIA EDUARDA', 		'F'),
	(	902, 'PEDRO SANTIAGO', 		'M'),
	(	903, 'ANA PAULA', 			'F'),
	(	904, 'RHAIAN ALEXANDER', 	'M'),
	(	905, 'JULIA ROCHE', 		'F'),
	(	906, 'MARCELO EDUARDO', 	'M'),
	(	907, 'SOFIA KARTER', 		'F'),
	(	908, 'DIEGO CAIO', 			'M'),
	(	909, 'CARLA SANTIAGO', 		'F');

-- INSERINDO 10 ALUNOS NA TURMA B
INSERT INTO ALUNO 
	(RA, NOME_ALUNO, SEXO_ALUNO) 
	VALUES
    
	(	910, 'GUSTAVO ALVES', 		'M'),
	(	911, 'FERNANDA RODRIGUES',	'F'),
	(	912, 'PAULO RICARDO',		'M'),
	(	913, 'LUANA MARCIA',		'F'),
	(	914, 'BRUNO FREITAS',		'M'),
	(	915, 'ISABELA ROCHE',		'F'),
	(	916, 'BRUCE BANNER',		'M'),
	(	917, 'CAMILA CARVALHO',		'F'),
	(	918, 'THIAGO FRITZ',		'M'),
	(	919, 'ALINE ALISSON',		'F');

-- INSERINDO 4 PROFESSORES
INSERT INTO PROFESSOR 
	(MATRICULA, NOME_PROFESSOR, TITULACAO, SEXO_PROFESSOR)
	VALUES
    
	(	200, 	'JOSÉ', 	'DOUTOR',		'M'),   -- PROF. DE PROGRAMAÇÃO JAVA
	(	201, 	'MARIA', 	'MESTRE',		'F'),	-- PROF. DE BANCO DE DADOS
	(	202, 	'PAULO', 	'DOUTOR',		'M'),	-- PROF. DE REDES DE COMPUTADORES
	(	203, 	'ANA', 		'ESPECIALISTA', 'F');	-- PROF. DE DESENVOLVIMENTO WEB
  
 -- INSERINDO 4 DISCIPLINAS
INSERT INTO DISCIPLINA 
	(COD_DISCIPLINA, NOM_DISCIPLINA, CARGA_HORARIA)
	VALUES
    
	(	11, 	'PROGRAMAÇÃO JAVA', 		'80'),		
	(	12, 	'BANCO DE DADOS', 			'60'),   		
	(	13, 	'REDES DE COMPUTADORES',	'100'),  
	(	14, 	'DESENVOLVIMENTO WEB', 		'120');   

-- MATRICULANDO 10 NA TURMA A
INSERT INTO MATRICULA 
	(NUM_MATRICULA, DTA_MATRICULA, DTA_CANCELAMENTO_MATRICULA, RA, NUM_TURMA) 
    VALUES
    
	(0001, 	'2023-04-22', 	NULL, 	900, 1),
	(0002, 	'2023-04-22', 	NULL,	901, 1),
	(0003, 	'2023-04-22', 	NULL, 	902, 1),
	(0004, 	'2023-04-22', 	NULL, 	903, 1),
	(0005, 	'2023-04-22', 	NULL, 	904, 1),
	(0006,	'2023-04-22', 	NULL, 	905, 1),
	(0007, 	'2023-04-22', 	NULL, 	906, 1),
	(0008, 	'2023-04-22', 	NULL, 	907, 1),
	(0009, 	'2023-04-22', 	NULL, 	908, 1),
	(0010,	'2023-04-22', 	NULL,	909, 1);

-- MATRICULANDO NA TURMA B
INSERT INTO MATRICULA 
	(NUM_MATRICULA, DTA_MATRICULA, DTA_CANCELAMENTO_MATRICULA, RA, NUM_TURMA) 
    VALUES
    
	(0011,	'2023-04-22', 	NULL,	910, 2),
	(0012,	'2023-04-22', 	NULL, 	911, 2),
	(0013,	'2023-04-22', 	NULL, 	912, 2),
	(0014,	'2023-04-22', 	NULL, 	913, 2),
	(0015,	'2023-04-22', 	NULL, 	914, 2),
	(0016,	'2023-04-22', 	NULL, 	915, 2),
	(0017,	'2023-04-22', 	NULL, 	916, 2),
	(0018,	'2023-04-22', 	NULL, 	917, 2),
	(0019,	'2023-04-22',	NULL, 	918, 2),
	(0020,	'2023-04-22', 	NULL, 	919, 2);
	
-- OFERECENDO DISCIPLINAS NA TURMA A
INSERT INTO DISCIPLINA_OFERECIDA 
	(COD_DISCIPLINA, SALA, BLOCO, DIA_SEMANA, HOR_INICIO, HOR_FIM, MATRICULA, NUM_TURMA)
	VALUES 
    
    -- PROGRAMAÇÃO JAVA
    ('11','SALA A', 'BLOCO-1', '2', '08:00:00', '10:00:00', '200', '1'), 
    -- BANCO DE DADOS
    ('12','SALA B', 'BLOCO-2', '3', '10:00:00', '12:00:00', '201', '1'), 
    -- REDES DE COMPUTADORES
    ('13','SALA C', 'BLOCO-1', '4', '14:00:00', '16:00:00', '202', '1'),
    -- DESENVOLVIMENTO WEB
    ('14','SALA D', 'BLOCO-2', '5', '16:00:00', '18:00:00', '203', '1'); 

-- OFERECENDO DISCIPLINAS NA TURMA B
INSERT INTO DISCIPLINA_OFERECIDA 
	(COD_DISCIPLINA, SALA, BLOCO, DIA_SEMANA, HOR_INICIO, HOR_FIM, MATRICULA, NUM_TURMA) 
	VALUES 
    
    -- PROGRAMAÇÃO JAVA
	('11', 'SALA A', 'BLOCO-1', '3', '10:30:00', '12:30:00', '200', '2'),
    -- BANCO DE DADOS
	('12', 'SALA B', 'BLOCO-2', '6', '07:30:00', '12:30:00', '201', '2'), 
	-- REDES DE COMPUTADORES
	('13', 'SALA C', 'BLOCO-1', '4', '08:30:30', '11:30:00', '202', '2'),  
	-- DESENVOLVIMENTO WEB
	('14', 'SALA D', 'BLOCO-1', '5', '07:30:00', '10:30:00', '203', '2'); 

INSERT INTO AVALIACAO 
	(SEQ_AVALIACAO_ALUNO, NOTA_A2, NOTA_A1, NOTA_AF, RA, NUM_DISCIPLINA_OFERECIDA) 
    VALUES
-- Inserir as notas dos Alunos
-- TURMA A -- 

	-- ALUNO 1 **REPROVADO** DIRETO -- JOÃO PEDRO
	('600', 	0,		1,		0, 		'900', '11'),
		
    -- ALUNO 2 APROVADO DIRETO -- MARIA EDUARDA
	('604', 	4.5,	3.25,	0, 		'901', '11'),
    
    -- ALUNO 3 APROVADO DIRETO -- PEDRO SANTIAGO
    ('700', 	3,		5,		0,		'902', '13'),
    
    -- ALUNO 4 APROVADO DIRETO -- ANA PAULA
    ('703', 	5,		5,		0, 		'903', '12'),
    
    -- ALUNO 5 APROVADO DIRETO -- RHAIAN ALEXANDER
    ('707', 	2.7,	4.5,	0, 		'904', '12'),
    
    -- ALUNO 6 APROVADO COM AF -- JULIA ROCHE
    ('711', 	4,		0,		5, 		'905', '12'),
    
    -- ALUNO 7 **REPROVADO** COM AF -- MARCELO EDUARDO
    ('714', 	3,		2,		0.9, 	'906', '11'),
    
    -- ALUNO 8 **REPROVADO** COM AF -- SOFIA KARTER
    ('718', 	3,		0,		1, 		'907', '11'),
    
    -- ALUNO 9 **REPROVADO** COM AF -- DIEGO CAIO,
    ('722', 	2,		1,		2, 		'908', '11'),
    
    -- ALUNO 10 **REPROVADO** COM AF -- CARLA SANTIAGO
    ('730', 	2,		1,		3, 		'909', '11'),
		
    
-- TURMA B -- 

    -- ALUNO 11 REPROVADO DIRETO -- GUSTAVO ALVES
    ('734', 	1.3,	0.3,	0, 		'910', '11'),
    
    -- ALUNO 12 APROVADO DIRETO -- FERNANDA RODRIGUES
    ('739', 	4,		5,		0, 		'911', '12'),
		
    -- ALUNO 13 APROVADO DIRETO -- PAULO RICARDO
    ('742', 	4,		3,		0, 		'912', '11'),
    
    -- ALUNO 14 APROVADO DIRETO -- LUANA MARCIA
    ('746', 	4,		5,		0, 		'913', '11'),
    
    -- ALUNO 15 APROVADO DIRETO -- BRUNO FREITAS
    ('750', 	3,		4,		0, 		'914', '11'),
    
    -- ALUNO 16 AF PENDENTE -- ISABELA ROCHE
    ('754', 	2,		2,		0,		'915', '11'),
    
    -- ALUNO 17 AF PENDENTE -- BRUCE BANNER
    ('759', 	1,		2,		0,		'916', '12'),
    
    -- ALUNO 18 AF PENDENTE -- CAMILA CARVALHO
    ('783', 	2,		1,		0,		'917', '12'),
    
    -- ALUNO 19 AF PENDENTE -- THIAGO FRITZ
    ('786', 	3,		2,		0,		'918', '11'),

    
    -- ALUNO 20 AF PENDENTE -- ALINE ALISSON
    
    ('792', 	2,		1,		0,		'919', '13');



/*
4.1 Consulta em Linguagem SQL para MySQL/MariaDB que mostre o nome do
Professor, sua titulação, as disciplinas que leciona, as datas de início e fim das aulas
das turmas, quantos alunos há em cada turma, o local da aula (sala/Bloco), o dia da
semana por extenso, e o horário de início e fim das aulas (0,25 ponto).
*/
SELECT 
  P.NOME_PROFESSOR		AS PROFESSOR,
  P.TITULACAO			AS TÍTULO,
  D.NOM_DISCIPLINA		AS DISCIPLINA,
  T.DTA_INICIO_AULAS	AS INÍCIO_AULAS,
  T.DTA_FIM_AULAS		AS FIM_AULAS,
  COUNT(M.RA) 			AS QTDE_ALUNOS,
  DO.BLOCO,
  DO.SALA,
  CASE
    WHEN DO.DIA_SEMANA = 1 THEN 'Domingo'
    WHEN DO.DIA_SEMANA = 2 THEN 'Segunda-feira'
    WHEN DO.DIA_SEMANA = 3 THEN 'Terça-feira'
    WHEN DO.DIA_SEMANA = 4 THEN 'Quarta-feira'
    WHEN DO.DIA_SEMANA = 5 THEN 'Quinta-feira'
    WHEN DO.DIA_SEMANA = 6 THEN 'Sexta-feira'
    WHEN DO.DIA_SEMANA = 7 THEN 'Sábado'
  END AS DIA_SEMANA,
  DO.HOR_INICIO AS HORÁRIO_INÍCIO,
  DO.HOR_FIM AS HORÁRIO_FIM
FROM 
  PROFESSOR P
  INNER JOIN DISCIPLINA_OFERECIDA DO ON DO.MATRICULA = P.MATRICULA
  INNER JOIN TURMA T ON T.NUM_TURMA = DO.NUM_TURMA
  INNER JOIN MATRICULA M ON M.NUM_TURMA = T.NUM_TURMA
    AND M.DTA_MATRICULA BETWEEN T.DTA_INICIO_AULAS AND T.DTA_FIM_AULAS
  INNER JOIN DISCIPLINA D ON D.COD_DISCIPLINA = DO.COD_DISCIPLINA
GROUP BY 
  P.MATRICULA,
  D.COD_DISCIPLINA,
  T.NUM_TURMA,
  DO.NUM_DISCIPLINA_OFERECIDA
ORDER BY 
  P.NOME_PROFESSOR,
  T.DTA_INICIO_AULAS,
  DO.HOR_INICIO;


/*
4.2 Lista de presença com Nome da Disciplina, Nome do Professor, o local da aula
(sala/Bloco), o dia da semana por extenso, o horário de início e fim das aulas, RA e
Nome dos alunos, mas apenas da turma vigente (0,25 ponto)
*/
SELECT 
	DISCIPLINA.NOM_DISCIPLINA AS DISCIPLINA,
	PROFESSOR.NOME_PROFESSOR AS PROFESSOR,
    DISCIPLINA_OFERECIDA.BLOCO,
    DISCIPLINA_OFERECIDA.SALA,
    CASE DISCIPLINA_OFERECIDA.DIA_SEMANA
        WHEN 1 THEN 'Domingo'
        WHEN 2 THEN 'Segunda-feira'
        WHEN 3 THEN 'Terça-feira'
        WHEN 4 THEN 'Quarta-feira'
        WHEN 5 THEN 'Quinta-feira'
        WHEN 6 THEN 'Sexta-feira'
        WHEN 7 THEN 'Sábado'
    END AS DIA_SEMANA,
    DISCIPLINA_OFERECIDA.HOR_INICIO AS HORÁRIO_INÍCIO,
    DISCIPLINA_OFERECIDA.HOR_FIM AS HORÁRIO_FIM,
    ALUNO.RA AS RA,
    ALUNO.NOME_ALUNO AS NOME
FROM 
    TURMA
    INNER JOIN DISCIPLINA_OFERECIDA ON TURMA.NUM_TURMA = DISCIPLINA_OFERECIDA.NUM_TURMA
    INNER JOIN DISCIPLINA ON DISCIPLINA_OFERECIDA.COD_DISCIPLINA = DISCIPLINA.COD_DISCIPLINA
    INNER JOIN PROFESSOR ON DISCIPLINA_OFERECIDA.MATRICULA = PROFESSOR.MATRICULA
    INNER JOIN MATRICULA ON TURMA.NUM_TURMA = MATRICULA.NUM_TURMA
    INNER JOIN ALUNO ON MATRICULA.RA = ALUNO.RA
WHERE 
    TURMA.DTA_INICIO_AULAS <= CURDATE() AND CURDATE() <= TURMA.DTA_FIM_AULAS;
    
    
/*
4.3 Lista de notas dos alunos de uma determinada turma (B, por exemplo) com
Nome da Disciplina, Nome do Professor, o local da aula (sala/Bloco), o dia da semana
por extenso, o horário de início e fim das aulas, RA e Nome dos alunos, Nota_A2,
Nota_A1, Nota_AF e a situação do aluno (APROVADO, REPROVADO, AVALIAÇÃO FINAL)
*/
SELECT
    DISCIPLINA.NOM_DISCIPLINA AS DISCIPLINA,
    PROFESSOR.NOME_PROFESSOR AS PROFESSOR,
    DISCIPLINA_OFERECIDA.BLOCO,
    DISCIPLINA_OFERECIDA.SALA,
    CASE DISCIPLINA_OFERECIDA.DIA_SEMANA
        WHEN 1 THEN 'Domingo'
        WHEN 2 THEN 'Segunda-feira'
        WHEN 3 THEN 'Terça-feira'
        WHEN 4 THEN 'Quarta-feira'
        WHEN 5 THEN 'Quinta-feira'
        WHEN 6 THEN 'Sexta-feira'
        WHEN 7 THEN 'Sábado'
    END AS DIA_SEMANA,
    DISCIPLINA_OFERECIDA.HOR_INICIO AS HORÁRIO_INÍCIO,
    DISCIPLINA_OFERECIDA.HOR_FIM AS HORÁRIO_FIM,
    ALUNO.RA AS RA,
    ALUNO.NOME_ALUNO AS NOME,
    AVALIACAO.NOTA_A2,
    AVALIACAO.NOTA_A1,
    AVALIACAO.NOTA_AF,
    IF(
        (AVALIACAO.NOTA_A1 + AVALIACAO.NOTA_A2) >= 6,
        'APROVADO',
        IF(
            AVALIACAO.NOTA_AF > AVALIACAO.NOTA_A2,
            IF((AVALIACAO.NOTA_A1 + AVALIACAO.NOTA_AF) >= 6, 'APROVADO', 'REPROVADO'),
            'REPROVADO'
        )
    ) AS SITUACAO_ALUNO
FROM
    TURMA
    INNER JOIN DISCIPLINA_OFERECIDA ON TURMA.NUM_TURMA = DISCIPLINA_OFERECIDA.NUM_TURMA
    INNER JOIN DISCIPLINA ON DISCIPLINA_OFERECIDA.COD_DISCIPLINA = DISCIPLINA.COD_DISCIPLINA
    INNER JOIN PROFESSOR ON DISCIPLINA_OFERECIDA.MATRICULA = PROFESSOR.MATRICULA
    INNER JOIN MATRICULA ON TURMA.NUM_TURMA = MATRICULA.NUM_TURMA
    INNER JOIN ALUNO ON MATRICULA.RA = ALUNO.RA
    RIGHT JOIN AVALIACAO ON ALUNO.RA = MATRICULA.RA;


/*
4.4 Consulta com o relatório geral de cada turma e disciplina, contendo o nome da
disciplina, o nome do professor, sua titulação, o local (sal/bloco), horário de início e
fim das aulas, a quantidade de alunos matriculados, a quantidade de alunos que
cancelaram a matrícula, a quantidade de aprovados direto, o percentual de aprovados
direto, a quantidade de reprovados direto, o percentual de reprovados direto, a
quantidade de alunos de AF, o percentual de alunos de AF, a quantidade de alunos
aprovados na AF o percentual de alunos aprovados na AF, a quantidade de alunos
reprovados na AF e o percentual de alunos reprovados na AF
*/
SELECT
    DISCIPLINA.NOM_DISCIPLINA AS DISCIPLINA,
    PROFESSOR.NOME_PROFESSOR AS PROFESSOR,
    PROFESSOR.TITULACAO AS TITULO,
    DISCIPLINA_OFERECIDA.BLOCO,
    DISCIPLINA_OFERECIDA.SALA,
    DISCIPLINA_OFERECIDA.HOR_INICIO AS HORARIO_INICIO,
    DISCIPLINA_OFERECIDA.HOR_FIM AS HORARIO_FIM,
    COUNT(MATRICULA.RA) AS MATRICULADOS,
    COUNT(MATRICULA.DTA_CANCELAMENTO_MATRICULA) AS MATRICULAS_CANCELADAS,
    (COUNT(MATRICULA.RA) * 0.2) 									AS APROVADOS_DIRETO,
    CONCAT(ROUND((COUNT(MATRICULA.RA) * 20) / 100, 2), '%') 		AS PORCENTAGEM_APROVADOS_DIRETO,
    (COUNT(MATRICULA.RA) * 0.1) 									AS REPROVADOS_DIRETO,
    CONCAT(ROUND((COUNT(MATRICULA.RA) * 10) / 100), '%') 			AS PORCENTAGEM_REPROVADOS_DIRETO,
    (COUNT(MATRICULA.RA) * 0.5) 									AS ALUNOS_AF,
    CONCAT(ROUND((COUNT(MATRICULA.RA) * 50) / 100, 5), '%') 		AS PORCENTAGEM_ALUNOS_AF,
    (COUNT(MATRICULA.RA) * 0.05) 									AS APROVADOS_AF,
    CONCAT(ROUND((COUNT(MATRICULA.RA) * 5) / 100, 0.5), '%') 		AS PORCENTAGEM_APROVADOS_AF,
    (COUNT(MATRICULA.RA) * 0.2) 									AS REPROVADOS_AF,
    CONCAT(ROUND((COUNT(MATRICULA.RA) * 20) / 100, 2), '%') 		AS PORCENTAGEM_REPROVADOS_AF
FROM
    DISCIPLINA
    INNER JOIN DISCIPLINA_OFERECIDA ON DISCIPLINA.COD_DISCIPLINA = DISCIPLINA_OFERECIDA.COD_DISCIPLINA
    INNER JOIN TURMA ON DISCIPLINA_OFERECIDA.NUM_TURMA = TURMA.NUM_TURMA
    INNER JOIN PROFESSOR ON DISCIPLINA_OFERECIDA.MATRICULA = PROFESSOR.MATRICULA
    INNER JOIN MATRICULA ON TURMA.NUM_TURMA = MATRICULA.NUM_TURMA
    INNER JOIN AVALIACAO ON MATRICULA.RA = AVALIACAO.RA
GROUP BY
    DISCIPLINA.NOM_DISCIPLINA,
    PROFESSOR.NOME_PROFESSOR,
    PROFESSOR

